{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","Text","setText","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","abouttext","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6520f60a.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n       \n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">{props.title} </a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a>\n        </li> */}\n      </ul>\n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n      </form> */}\n           <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n         <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n        </div>\n       \n    </div>\n    \n  </div>\n</nav>\n         \n    )\n}\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\nabouttext:PropTypes.string,\n\n\n}\n// Navbar.defaultProps ={\n//     title: \"set text here\",\n//     abouttext:\"about set here\"\n// }","import React, {useState} from \"react\"\n\n\n\nexport default function TextForm(props) {\n\n const handleUpClick = () =>{\n    let newText = Text.toUpperCase();\n    setText(newText)\n    props.showAlert(\"Converted To UpperCase\",\"success\")\n\n }\n const handleloClick = () =>{\n   let newText = Text.toLowerCase();\n   setText(newText)\n   \n   props.showAlert(\"Converted To LowerCase\",\"success\")\n\n}\nconst handleClearClick = () =>{\n   let newText = '';\n   setText(newText);\n   \n   props.showAlert(\"Cleared the Text\",\"success\")\n\n}\n\n const handleOnChange = (event) =>{\n    console.log(\"OnChange\")\n    setText(event.target.value)\n}\nconst handleCopy=()=>{\n    var text = document.getElementById(\"mybox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    \n    props.showAlert(\"Copied to ClipBoard\",\"success\")\n}\nconst handleExtraSpaces = ()=>{\n    let newText = Text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    \n    props.showAlert(\"Remove Extra Spaces\",\"success\")\n\n}\n\n\nconst [Text, setText] = useState('');\n    return (\n        <>\n        <div >\n           <div className=\" container my-3\"  style={{color: props.mode==='dark'?'white':'#042743'}} > \n        <h1>{props.heading}  </h1>\n             <textarea className=\"form-control\" value={Text} id=\"mybox\" style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'#042743'}} onChange={handleOnChange} rows=\"7\"></textarea>\n           </div>\n           <button className=\" btn btn-primary mx-1\"  onClick={handleUpClick}>\n               Convert To UpperCase\n           </button>\n           <button className=\"btn btn-primary mx-1\" onClick={handleloClick}>\n               Convert To LowerCase\n           </button>\n           <button className=\"btn btn-primary mx-1\" onClick={handleCopy}> CopyTaxt </button>\n           <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}> Remove Extra Spaces </button>\n           \n           <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}> Clear Text </button>\n      \n\n      </div>\n      <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n          <h1>Your Text Summery</h1>\n          <p>{Text.split(\" \").length} words and {Text.length} charactors</p>\n          \n          <p> {0.008 * Text.split(\" \").length }Minutes to read</p>\n          <h2>Preview</h2>\n          <p>{Text.length>0?Text:\"Enter something in the textbox to Preview it here\"}</p>\n      </div>\n      </>\n\n\n\n    )\n}\n"," \n import React from \"react\"\n function Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    } \n    return (\n         props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n               <strong>{capitalize(props.alert.type)}</strong>  :{props.alert.msg}       \n</div>\n    )\n}\nexport default Alert","\nimport './App.css';\n// import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n    const showAlert =(message, type)=>{\n       setAlert({\n         msg: message,\n         type: type\n       })\n       setTimeout(() => {\n         setAlert(null);\n       }, 1500);\n\n    }\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark has been Enable\",\"success\");\n      document.title=\"Textutils = Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light has been Enable\",\"success\");\n      \n      document.title=\"Textutils = Light Mode\";\n    }\n  }\n\n  \n  return (\n<>\n{/* <Router> */}\n <Navbar title=\"Textutils\" abouttext= \"About\" mode={mode}  toggleMode={toggleMode} /> \n<Alert alert={alert}/>\n\n<div className=\"container my-3\">\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About  mode={mode} /> */}\n          {/* </Route> */}\n         \n <TextForm showAlert={showAlert} heading=\"Enter text to Analyze Below\" mode={mode}/>\n {/* </Route> */}\n          \n        {/* </Switch> */}\n\n </div>\n {/* </Router> */}\n {/* Run `npm audit` */}\n {/* npm audit fix */}\n {/* run `npm fund` */}\n\n</>\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}